roles:
  get:
    tags:
      - Roles
    summary: List roles
    description: Get a paginated list of roles within the tenant
    operationId: listRoles
    parameters:
      - $ref: '../openapi.yaml#/components/parameters/TenantIdHeader'
      - $ref: '../openapi.yaml#/components/parameters/ApiVersionHeader'
      - $ref: '../openapi.yaml#/components/parameters/PaginationLimit'
      - $ref: '../openapi.yaml#/components/parameters/PaginationOffset'
      - name: search
        in: query
        required: false
        schema:
          type: string
        description: Search term to filter roles by name
      - name: isSystemRole
        in: query
        required: false
        schema:
          type: boolean
        description: Filter by system or custom roles
      - name: sortBy
        in: query
        required: false
        schema:
          type: string
          enum: [name, createdAt]
          default: name
        description: Field to sort the results by
      - name: sortOrder
        in: query
        required: false
        schema:
          type: string
          enum: [asc, desc]
          default: asc
        description: Sort order (ascending or descending)
    responses:
      '200':
        description: List of roles
        content:
          application/json:
            schema:
              $ref: '../schemas/role.yaml#/RoleList'
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/Unauthorized'
      '403':
        $ref: '../openapi.yaml#/components/responses/Forbidden'
    security:
      - BearerAuth: []
      - ApiKeyAuth: []
  
  post:
    tags:
      - Roles
    summary: Create a role
    description: Create a new role within the tenant
    operationId: createRole
    parameters:
      - $ref: '../openapi.yaml#/components/parameters/TenantIdHeader'
      - $ref: '../openapi.yaml#/components/parameters/ApiVersionHeader'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/role.yaml#/RoleCreate'
    responses:
      '201':
        description: Role created successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/role.yaml#/Role'
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/Unauthorized'
      '403':
        $ref: '../openapi.yaml#/components/responses/Forbidden'
      '409':
        description: Conflict - Role with this name already exists
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/Error'
    security:
      - BearerAuth: []
      - ApiKeyAuth: []

rolesById:
  get:
    tags:
      - Roles
    summary: Get role by ID
    description: Retrieve a specific role by ID
    operationId: getRoleById
    parameters:
      - $ref: '../openapi.yaml#/components/parameters/TenantIdHeader'
      - $ref: '../openapi.yaml#/components/parameters/ApiVersionHeader'
      - $ref: '../openapi.yaml#/components/parameters/RoleIdParam'
    responses:
      '200':
        description: Role details
        content:
          application/json:
            schema:
              $ref: '../schemas/role.yaml#/Role'
      '401':
        $ref: '../openapi.yaml#/components/responses/Unauthorized'
      '403':
        $ref: '../openapi.yaml#/components/responses/Forbidden'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFound'
    security:
      - BearerAuth: []
      - ApiKeyAuth: []
  
  put:
    tags:
      - Roles
    summary: Update role
    description: Update an existing role
    operationId: updateRole
    parameters:
      - $ref: '../openapi.yaml#/components/parameters/TenantIdHeader'
      - $ref: '../openapi.yaml#/components/parameters/ApiVersionHeader'
      - $ref: '../openapi.yaml#/components/parameters/RoleIdParam'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: '../schemas/role.yaml#/RoleUpdate'
    responses:
      '200':
        description: Role updated successfully
        content:
          application/json:
            schema:
              $ref: '../schemas/role.yaml#/Role'
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/Unauthorized'
      '403':
        $ref: '../openapi.yaml#/components/responses/Forbidden'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFound'
      '409':
        description: Conflict - Role with this name already exists
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/Error'
    security:
      - BearerAuth: []
      - ApiKeyAuth: []
  
  delete:
    tags:
      - Roles
    summary: Deactivate role
    description: Deactivates a role by changing its status to 'inactive' and recording the deactivation timestamp
    operationId: deleteRole
    parameters:
      - $ref: '../openapi.yaml#/components/parameters/TenantIdHeader'
      - $ref: '../openapi.yaml#/components/parameters/ApiVersionHeader'
      - $ref: '../openapi.yaml#/components/parameters/RoleIdParam'
    responses:
      '204':
        description: Role deleted successfully
      '401':
        $ref: '../openapi.yaml#/components/responses/Unauthorized'
      '403':
        $ref: '../openapi.yaml#/components/responses/Forbidden'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFound'
      '409':
        description: Conflict - Role is still in use
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/Error'
    security:
      - BearerAuth: []
      - ApiKeyAuth: []

rolePermissions:
  get:
    tags:
      - Roles
      - Permissions
    summary: List role permissions
    description: Get all permissions assigned to a role
    operationId: getRolePermissions
    parameters:
      - $ref: '../openapi.yaml#/components/parameters/TenantIdHeader'
      - $ref: '../openapi.yaml#/components/parameters/ApiVersionHeader'
      - $ref: '../openapi.yaml#/components/parameters/RoleIdParam'
      - $ref: '../openapi.yaml#/components/parameters/PaginationLimit'
      - $ref: '../openapi.yaml#/components/parameters/PaginationOffset'
    responses:
      '200':
        description: List of permissions assigned to the role
        content:
          application/json:
            schema:
              $ref: '../schemas/permission.yaml#/PermissionList'
      '401':
        $ref: '../openapi.yaml#/components/responses/Unauthorized'
      '403':
        $ref: '../openapi.yaml#/components/responses/Forbidden'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFound'
    security:
      - BearerAuth: []
      - ApiKeyAuth: []
  
  post:
    tags:
      - Roles
      - Permissions
    summary: Assign permission to role
    description: Assign a permission to a role
    operationId: assignPermissionToRole
    parameters:
      - $ref: '../openapi.yaml#/components/parameters/TenantIdHeader'
      - $ref: '../openapi.yaml#/components/parameters/ApiVersionHeader'
      - $ref: '../openapi.yaml#/components/parameters/RoleIdParam'
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - permissionId
            properties:
              permissionId:
                type: string
                format: uuid
                description: ID of the permission to assign
    responses:
      '204':
        description: Permission assigned successfully
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/Unauthorized'
      '403':
        $ref: '../openapi.yaml#/components/responses/Forbidden'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFound'
      '409':
        description: Conflict - Role already has this permission
        content:
          application/json:
            schema:
              $ref: '../openapi.yaml#/components/schemas/Error'
    security:
      - BearerAuth: []
      - ApiKeyAuth: []
  
  delete:
    tags:
      - Roles
      - Permissions
    summary: Remove permission from role
    description: Remove a permission from a role
    operationId: removePermissionFromRole
    parameters:
      - $ref: '../openapi.yaml#/components/parameters/TenantIdHeader'
      - $ref: '../openapi.yaml#/components/parameters/ApiVersionHeader'
      - $ref: '../openapi.yaml#/components/parameters/RoleIdParam'
      - name: permissionId
        in: query
        required: true
        schema:
          type: string
          format: uuid
        description: ID of the permission to remove
    responses:
      '204':
        description: Permission removed successfully
      '400':
        $ref: '../openapi.yaml#/components/responses/ValidationError'
      '401':
        $ref: '../openapi.yaml#/components/responses/Unauthorized'
      '403':
        $ref: '../openapi.yaml#/components/responses/Forbidden'
      '404':
        $ref: '../openapi.yaml#/components/responses/NotFound'
    security:
      - BearerAuth: []
      - ApiKeyAuth: []
